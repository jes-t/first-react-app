{"version":3,"sources":["components/Users/User.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.js"],"names":["i18n","User","usersArr","isFetching","followingInProgress","followThunk","unfollowThunk","renderUserPhoto","user","photos","small","userPhoto","RootContainer","UsersListContainer","dataSource","loading","renderItem","key","id","to","hoverable","style","width","marginTop","Meta","avatar","size","src","title","name","description","status","SubscribeButton","followed","type","disabled","some","onClick","renderSubscribeButton","styled","div","Users","pageSize","totalUsersCount","onPageChanged","pageCount","Math","ceil","pages","i","push","defaultCurrent","total","pageSizeOptions","onChange","showTotal","showSizeChanger","getUsersArr","state","users","getPageSize","getTotalUsersCount","getCurrentPage","currentPage","getIsFetching","getFollowingInProgress","mapDispatchToProps","getUsers","UsersContainer","compose","connect","withAuthRedirect","useEffect","length","pageNumber"],"mappings":"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","file":"static/js/8.4fe42767.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, Avatar, Button, List } from 'antd'\nimport userPhoto from '../../userLogo.png'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst i18n = {\n  total: 'Total users:',\n  follow: 'Follow',\n  unfollow: 'Unfollow',\n}\n\nexport const User = ({\n  usersArr,\n  isFetching,\n  followingInProgress,\n  followThunk,\n  unfollowThunk,\n}) => {\n  const renderSubscribeButton = (user) => {\n    return user.followed ? (\n      <Button\n        type=\"dashed\"\n        disabled={\n          isFetching || followingInProgress.some((id) => id === user.id)\n        }\n        onClick={() => {\n          unfollowThunk(user.id)\n        }}\n      >\n        {i18n.unfollow}\n      </Button>\n    ) : (\n      <Button\n        type=\"dashed\"\n        disabled={\n          isFetching || followingInProgress.some((id) => id === user.id)\n        }\n        onClick={() => {\n          followThunk(user.id)\n        }}\n      >\n        {i18n.follow}\n      </Button>\n    )\n  }\n\n  const renderUserPhoto = (user) => {\n    return user.photos.small != null ? user.photos.small : userPhoto\n  }\n\n  return (\n    <RootContainer>\n      <UsersListContainer>\n        <List\n          dataSource={usersArr}\n          loading={isFetching}\n          renderItem={(user) => (\n            <div key={user.id}>\n              <Link to={`/profile/${user.id}`}>\n                <Card hoverable style={{ width: 300, marginTop: 16 }}>\n                  <Card.Meta\n                    avatar={<Avatar size={70} src={renderUserPhoto(user)} />}\n                    title={`${user.name}`}\n                    description={user.status}\n                  />\n                </Card>\n              </Link>\n              <SubscribeButton>{renderSubscribeButton(user)}</SubscribeButton>\n            </div>\n          )}\n        />\n      </UsersListContainer>\n    </RootContainer>\n  )\n}\nconst SubscribeButton = styled.div`\n  padding-top: 5px;\n`\nconst RootContainer = styled.div``\nconst UsersListContainer = styled.div`\n  overflow: auto;\n  height: 70vh;\n`\n","import React from 'react'\nimport { Pagination } from 'antd'\nimport styled from 'styled-components'\nimport { User } from './User'\n\nconst i18n = {\n  total: 'Total users:',\n  follow: 'Follow',\n  unfollow: 'Unfollow',\n}\n\nexport const Users = ({\n  usersArr,\n  pageSize,\n  totalUsersCount,\n  onPageChanged,\n  isFetching,\n  followingInProgress,\n  followThunk,\n  unfollowThunk,\n}) => {\n  let pageCount = Math.ceil(totalUsersCount / pageSize)\n  let pages = []\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i)\n  }\n  const showTotal = () => {\n    return `${i18n.total} ${totalUsersCount}`\n  }\n\n  return (\n    <RootContainer>\n      <Pagination\n        defaultCurrent={1}\n        total={pageCount}\n        pageSizeOptions={[]}\n        onChange={onPageChanged}\n        showTotal={showTotal}\n        showSizeChanger={false}\n      />\n      <User\n        usersArr={usersArr}\n        isFetching={isFetching}\n        followingInProgress={followingInProgress}\n        followThunk={followThunk}\n        unfollowThunk={unfollowThunk}\n      />\n    </RootContainer>\n  )\n}\n\nconst RootContainer = styled.div``\n","export const getUsersArr = (state) => {\n  return state.users.usersArr\n}\nexport const getPageSize = (state) => {\n  return state.users.pageSize\n}\nexport const getTotalUsersCount = (state) => {\n  return state.users.totalUsersCount\n}\nexport const getCurrentPage = (state) => {\n  return state.users.currentPage\n}\nexport const getIsFetching = (state) => {\n  return state.users.isFetching\n}\nexport const getFollowingInProgress = (state) => {\n  return state.users.followingInProgress\n}\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { getUsers, followThunk, unfollowThunk } from '../../redux/users-reducer'\nimport { Users } from './Users'\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\nimport { compose } from 'redux'\nimport {\n  getUsersArr,\n  getPageSize,\n  getTotalUsersCount,\n  getCurrentPage,\n  getIsFetching,\n  getFollowingInProgress,\n} from '../../redux/users-selectors'\n\nconst UsersAPIComponent = ({\n  usersArr,\n  pageSize,\n  totalUsersCount,\n  currentPage,\n  isFetching,\n  followingInProgress,\n  getUsers,\n  followThunk,\n  unfollowThunk,\n}) => {\n  useEffect(() => {\n    if (usersArr.length === 0) {\n      getUsers(currentPage, pageSize)\n    }\n  }, [])\n  const onPageChanged = (pageNumber) => {\n    getUsers(pageNumber, pageSize)\n  }\n\n  return (\n    <Users\n      usersArr={usersArr}\n      pageSize={pageSize}\n      totalUsersCount={totalUsersCount}\n      onPageChanged={onPageChanged}\n      isFetching={isFetching}\n      followingInProgress={followingInProgress}\n      followThunk={followThunk}\n      unfollowThunk={unfollowThunk}\n    />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    usersArr: getUsersArr(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state),\n  }\n}\nconst mapDispatchToProps = {\n  getUsers,\n  followThunk,\n  unfollowThunk,\n}\n\nconst UsersContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(UsersAPIComponent)\n\nexport default UsersContainer\n"],"sourceRoot":""}