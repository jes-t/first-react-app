{"version":3,"sources":["components/Login/LoginForm.js","components/Login/Login.js","components/Login/LoginContainer.js"],"names":["LoginForm","postLogin","errorMessage","setErrorMessage","message","description","type","showIcon","closable","afterClose","StyledForm","initialValues","remember","onFinish","values","email","password","rememberMe","Item","name","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","valuePropName","noStyle","htmlType","className","styled","Form","i18n","Login","login","isAuth","deleteLogout","Container","onClick","disabled","to","div","LoginShellContainer","mapDispatchToProps","LoginContainer","connect","state","auth"],"mappings":"2ZAKO,IAAMA,EAAY,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBAKnD,OACE,sCACKD,GACD,kBAAC,IAAD,CACEE,QAAQ,QACRC,YAAaH,EACbI,KAAK,QACLC,UAAQ,EACRC,UAAQ,EACRC,WAAY,WACVN,EAAgB,OAKtB,kBAACO,EAAD,CAAYC,cAAe,CAAEC,UAAU,GAAQC,SAnBlC,SAACC,GAChBb,EAAUa,EAAOC,MAAOD,EAAOE,SAAUF,EAAOG,cAmB5C,kBAAC,IAAKC,KAAN,CACEC,KAAK,QACLC,MAAO,CAAC,CAAEC,UAAU,EAAMjB,QAAS,8BAEnC,kBAAC,IAAD,CAAOkB,OAAQ,kBAACC,EAAA,EAAD,MAAkBC,YAAY,WAE/C,kBAAC,IAAKN,KAAN,CACEC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMjB,QAAS,iCAEnC,kBAAC,IAAMqB,SAAP,CAAgBH,OAAQ,kBAACI,EAAA,EAAD,MAAkBF,YAAY,cAExD,kBAAC,IAAKN,KAAN,KACE,kBAAC,IAAKA,KAAN,CAAWC,KAAK,aAAaQ,cAAc,UAAUC,SAAO,GAC1D,kBAAC,IAAD,sBAIJ,kBAAC,IAAKV,KAAN,KACE,kBAAC,IAAD,CACEZ,KAAK,UACLuB,SAAS,SACTC,UAAU,qBAHZ,cAYJpB,EAAaqB,YAAOC,IAAPD,CAAH,K,8FCnDhB,IAAME,EACO,sBAGAC,EAAQ,SAAC,GAOf,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,OACAnC,EAII,EAJJA,UACAoC,EAGI,EAHJA,aACAnC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEA,OACE,6BACGiC,EACC,kBAACE,EAAD,KACGH,EACD,kBAAC,IAAD,CAAQI,QAASF,EAAcG,UAAWJ,GAA1C,YAKF,6BACE,kBAAC,IAAD,CAAMK,GAAG,UAAUR,GACnB,kBAAC,EAAD,CACEhC,UAAWA,EACXC,aAAcA,EACdC,gBAAiBA,OAOvBmC,EAAYP,IAAOW,IAAV,K,gBC/BFC,EAAsB,SAAC,GAO7B,IANLR,EAMI,EANJA,MACAC,EAKI,EALJA,OACAnC,EAII,EAJJA,UACAoC,EAGI,EAHJA,aACAnC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEA,OACE,kBAAC,EAAD,CACEiC,OAAQA,EACRD,MAAOA,EACPlC,UAAWA,EACXoC,aAAcA,EACdnC,aAAcA,EACdC,gBAAiBA,KAWjByC,EAAqB,CACzB3C,cACAoC,iBACAlC,qBAEI0C,EAAiBC,aAZC,SAACC,GACvB,MAAO,CACLX,OAAQW,EAAMC,KAAKZ,OACnBD,MAAOY,EAAMC,KAAKb,MAClBjC,aAAc6C,EAAMC,KAAK9C,gBAU3B0C,EAFqBE,CAGrBH,GAEaE","file":"static/js/8.3604bf51.chunk.js","sourcesContent":["import React from 'react'\nimport { Form, Input, Button, Checkbox, Alert } from 'antd'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\n\nexport const LoginForm = ({ postLogin, errorMessage, setErrorMessage }) => {\n  const onSubmit = (values) => {\n    postLogin(values.email, values.password, values.rememberMe)\n  }\n\n  return (\n    <>\n      {!!errorMessage && (\n        <Alert\n          message=\"Error\"\n          description={errorMessage}\n          type=\"error\"\n          showIcon\n          closable\n          afterClose={() => {\n            setErrorMessage('')\n          }}\n        />\n      )}\n\n      <StyledForm initialValues={{ remember: true }} onFinish={onSubmit}>\n        <Form.Item\n          name=\"email\"\n          rules={[{ required: true, message: 'Please input your email!' }]}\n        >\n          <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: 'Please input your Password!' }]}\n        >\n          <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\n        </Form.Item>\n        <Form.Item>\n          <Form.Item name=\"rememberMe\" valuePropName=\"checked\" noStyle>\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </StyledForm>\n    </>\n  )\n}\nconst StyledForm = styled(Form)`\n  max-width: 300px;\n\n  .login-form-button {\n    width: 100%;\n  }\n`\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { LoginForm } from './LoginForm'\nimport { Button } from 'antd'\n\nconst i18n = {\n  authTitle: 'Please authorize.  ',\n}\n\nexport const Login = ({\n  login,\n  isAuth,\n  postLogin,\n  deleteLogout,\n  errorMessage,\n  setErrorMessage,\n}) => {\n  return (\n    <div>\n      {isAuth ? (\n        <Container>\n          {login}\n          <Button onClick={deleteLogout} disabled={!isAuth}>\n            Log out\n          </Button>\n        </Container>\n      ) : (\n        <div>\n          <Link to=\"/login\">{i18n.authTitle}</Link>\n          <LoginForm\n            postLogin={postLogin}\n            errorMessage={errorMessage}\n            setErrorMessage={setErrorMessage}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\nconst Container = styled.div`\n  text-align: center;\n`\n","import React, { useEffect } from 'react'\nimport { Login } from './Login'\nimport { connect } from 'react-redux'\nimport {\n  postLogin,\n  deleteLogout,\n  setErrorMessage,\n} from '../../redux/auth-reducer'\n\nexport const LoginShellContainer = ({\n  login,\n  isAuth,\n  postLogin,\n  deleteLogout,\n  errorMessage,\n  setErrorMessage,\n}) => {\n  return (\n    <Login\n      isAuth={isAuth}\n      login={login}\n      postLogin={postLogin}\n      deleteLogout={deleteLogout}\n      errorMessage={errorMessage}\n      setErrorMessage={setErrorMessage}\n    />\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n    errorMessage: state.auth.errorMessage,\n  }\n}\nconst mapDispatchToProps = {\n  postLogin,\n  deleteLogout,\n  setErrorMessage,\n}\nconst LoginContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginShellContainer)\n\nexport default LoginContainer\n"],"sourceRoot":""}